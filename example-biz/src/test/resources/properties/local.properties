#驱动加载
jdbc.pool.driverClassName=com.mysql.jdbc.Driver
#注册驱动
jdbc.pool.url=jdbc:mysql://127.0.0.1:3306/example?useUnicode=yes&characterEncoding=utf-8&useLegacyDatetimeCode=false
#连接数据库的用户名
jdbc.pool.username=root
#连接数据库的密码
jdbc.pool.password=root
#初始化时池中建立的物理连接个数。
jdbc.pool.initialSize=2
#最大的可活跃的连接池数量
jdbc.pool.maxActive=20
#获取连接时最大等待时间，单位毫秒，超过连接就会失效。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降， 如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
jdbc.pool.maxWait=500
#连接回收器的运行周期时间，时间到了清理池中空闲的连接，testWhileIdle根据这个判断
jdbc.pool.timeBetweenEvictionRunsMillis=60000
jdbc.pool.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。
jdbc.pool.validationQuery=SELECT 1
#建议配置为true，不影响性能，并且保证安全性。 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。
jdbc.pool.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。设置为false
jdbc.pool.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能,设置为flase
jdbc.pool.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。
jdbc.pool.poolPreparedStatements=false
#池中能够缓冲的preparedStatements语句数量
jdbc.pool.maxPoolPreparedStatementPerConnectionSize=200

dubbo.application.name=example
dubbo.protocol.port=20880
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.protocol.host=


